static readonly updateTaskWithUserId = 'UPDATE dbo.Task SET TaskStatus = isnull(@taskStatus, TaskStatus),
AssignedUserRoleID=(select UserRoleId from UserRoleAssignment where UserId=@assignedUserId
and (UserRoleEndDt > GETDATE() OR UserRoleEndDt is null) and @taskStatus='PendingRerun'),
AssignedUserID = isnull(@assignedUserId, AssignedUserID),
UpdateDate = CURRENT_TIMESTAMP
WHERE TaskID = @taskId;'

static readonly updateTaskWithoutUserId = 'UPDATE dbo.Task SET TaskStatus = isnull(@taskStatus, TaskStatus),
UpdateDate = CURRENT_TIMESTAMP
WHERE TaskID = @taskId;'


static readonly updateTask = 'UPDATE dbo.Task 
SET 
    TaskStatus = ISNULL(@taskStatus, TaskStatus),
    AssignedUserRoleID = CASE 
        WHEN @assignedUserId IS NOT NULL AND @taskStatus = 'PendingRerun' THEN 
            (SELECT UserRoleId 
             FROM UserRoleAssignment 
             WHERE UserId = @assignedUserId 
             AND (UserRoleEndDt > GETDATE() OR UserRoleEndDt IS NULL))
        ELSE AssignedUserRoleID
    END,
    AssignedUserID = ISNULL(@assignedUserId, AssignedUserID),
    UpdateDate = CURRENT_TIMESTAMP
WHERE TaskID = @taskId;
';


In this combined query:

The TaskStatus is updated using ISNULL as in the original queries.
The AssignedUserRoleID is conditionally updated if @assignedUserId is not null and @taskStatus is 'PendingRerun'. Otherwise, it retains its existing value.
The AssignedUserID is updated using ISNULL as in the original queries.
The UpdateDate is updated to the current timestamp.
The WHERE clause ensures the update only applies to the specified task.
This way, you handle both cases (with and without @assignedUserId) in a single SQL statement.
