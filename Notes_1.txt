-> an example of how to use the spread operator on a string

We define a string str with the value "hello".
We use the spread operator to spread the characters of str into individual elements of an array charArray.

const str = 'hello';

// Use spread operator to convert string into an array of characters
const charArray = [...str];

console.log(charArray); // [ 'h', 'e', 'l', 'l', 'o' ]


-> The spread operator (...) can also be used with objects to create a shallow copy of an object or to merge multiple objects into one. This is particularly useful for creating new objects with additional or updated properties based on existing ones.

Here are a couple of examples to illustrate how to use the spread operator with objects.

Example 1: Creating a Shallow Copy of an Object

const originalObject = { a: 1, b: 2, c: 3 };

// Use spread operator to create a shallow copy of the object
const copiedObject = { ...originalObject };

console.log(copiedObject); // Output: { a: 1, b: 2, c: 3 }


Example 2: Merging Multiple Objects

const object1 = { a: 1, b: 2 };
const object2 = { b: 3, c: 4 };

// Use spread operator to merge objects
const mergedObject = { ...object1, ...object2 };

console.log(mergedObject); // Output: { a: 1, b: 3, c: 4 }


Example 3: Adding or Updating Properties in an Object

const user = { name: 'John', age: 30 };

// Use spread operator to create a new object with additional properties
const updatedUser = { ...user, age: 31, city: 'New York' };

console.log(updatedUser); // { name: 'John', age: 31, city: 'New York' }


